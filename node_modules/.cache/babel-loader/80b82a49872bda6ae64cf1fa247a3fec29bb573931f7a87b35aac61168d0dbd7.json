{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\my-react \\u2014 \\u043A\\u043E\\u043F\\u0438\\u044F\\u044F\\u044F\\u044F\\u044F\\\\src\\\\Components\\\\CardList\\\\CardList.jsx\";\nimport React from 'react';\nimport debounce from 'lodash.debounce';\nimport API from '../../API/API';\nimport Spinner from '../UI/Spinner/Spinner';\nimport Error from '../UI/Error/Error';\nimport PaginationUI from '../UI/Pagination/PaginationUI';\nimport { APIConsumer } from '../../API-Context/API-Context';\nimport CardItem from './CardItem/CardItem';\nimport './CardList.scss';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class CardList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      isLoading: false,\n      isError: false,\n      message: 'Type to search...',\n      currentPage: 1,\n      currentPageRated: 1,\n      totalItems: 0,\n      tab: 'Search',\n      ratingList: []\n    };\n    this.api = new API();\n    this.onMoviesLoad = movies => {\n      this.setState({\n        movies,\n        isLoading: false,\n        isError: false\n      });\n    };\n    this.onError = () => {\n      this.setState({\n        isError: true,\n        isLoading: false\n      });\n    };\n    this.getMovies = (query = '', currentPage) => {\n      if (query.length === 0) {\n        this.setState({\n          message: 'Type to search...'\n        });\n      }\n      this.api.getMoviesOnQuery(query, currentPage).then(res => {\n        this.onMoviesLoad(res.results);\n        this.setState({\n          totalItems: res.totalItems\n        });\n      }).catch(this.onError);\n    };\n    this.getMoviesWithRating = (guestId, currentPage) => {\n      this.api.getMoviesWithRating(guestId, currentPage).then(res => {\n        this.onMoviesLoad(res.results);\n        this.setState({\n          totalItems: res.totalItems\n        });\n      }).catch(this.onError);\n    };\n    this.debounceGetMovies = debounce((query, currentPage) => {\n      this.setState({\n        isLoading: true,\n        message: 'We are very sorry, but we have not found anything...'\n      });\n      this.getMovies(query, currentPage);\n    }, 1500);\n    this.paginationOnChange = page => {\n      if (this.state.tab === 'Search') {\n        this.setState({\n          currentPage: page\n        });\n      } else {\n        this.setState({\n          currentPageRated: page\n        });\n      }\n    };\n    this.addRatedMovie = (id, value) => {\n      const newRatedMovie = {\n        id,\n        value\n      };\n      this.setState(({\n        ratingList\n      }) => {\n        return {\n          ratingList: [...ratingList, newRatedMovie]\n        };\n      });\n    };\n    this.removeRatedMovie = id => {\n      this.setState(({\n        ratingList\n      }) => {\n        const newRatingList = ratingList.filter(item => item.id !== id);\n        return {\n          ratingList: newRatingList\n        };\n      });\n    };\n  }\n  componentDidMount() {\n    if (sessionStorage.getItem('ratingList')) {\n      this.setState({\n        ratingList: JSON.parse(sessionStorage.getItem('ratingList'))\n      });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.query !== this.props.query) {\n      this.debounceGetMovies(this.props.query, this.state.currentPage);\n    }\n    if (prevState.currentPage !== this.state.currentPage) {\n      this.getMovies(this.props.query, this.state.currentPage);\n      window.scrollTo(0, 0);\n    }\n    if (prevState.currentPageRated !== this.state.currentPageRated) {\n      this.getMoviesWithRating(this.props.guestId, this.state.currentPageRated);\n      window.scrollTo(0, 0);\n    }\n    if (prevProps.tab !== this.props.tab && this.props.tab === 'Rated') {\n      this.setState({\n        tab: this.props.tab,\n        message: 'We are very sorry, but we have not found anything...'\n      });\n      this.getMoviesWithRating(this.props.guestId, this.state.currentPageRated);\n    }\n    if (prevProps.tab !== this.props.tab && this.props.tab === 'Search') {\n      this.setState({\n        tab: this.props.tab,\n        message: 'Type to search...'\n      });\n      this.getMovies(this.props.query, this.state.currentPage);\n    }\n    if (prevState.ratingList !== this.state.ratingList) {\n      sessionStorage.setItem('ratingList', JSON.stringify(this.state.ratingList));\n    }\n  }\n  render() {\n    const {\n      isLoading,\n      isError,\n      message,\n      movies,\n      currentPage,\n      currentPageRated,\n      ratingList\n    } = this.state;\n    const errorView = isError ? /*#__PURE__*/_jsxDEV(Error, {\n      message: \"Oops. Something went wrong. Try again.\",\n      type: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 33\n    }, this) : null;\n    const spinner = isLoading && !isError ? /*#__PURE__*/_jsxDEV(Spinner, {\n      fontSize: 60\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 45\n    }, this) : null;\n    const page = this.state.tab === 'Search' ? currentPage : currentPageRated;\n    const cardList = !(isLoading || isError) ? /*#__PURE__*/_jsxDEV(CardListView, {\n      movies: movies,\n      message: message,\n      current: page,\n      onChange: this.paginationOnChange,\n      totalItems: this.state.totalItems,\n      guestId: this.props.guestId,\n      addRatedMovie: this.addRatedMovie,\n      removeRatedMovie: this.removeRatedMovie,\n      ratingList: ratingList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this) : null;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [errorView, spinner, cardList]\n    }, void 0, true);\n  }\n}\nconst CardListView = ({\n  movies,\n  message,\n  current,\n  onChange,\n  totalItems,\n  guestId,\n  addRatedMovie,\n  removeRatedMovie,\n  ratingList\n}) => {\n  return movies.length > 0 ? /*#__PURE__*/_jsxDEV(APIConsumer, {\n    children: ({\n      genres,\n      postRating,\n      deleteRating\n    }) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"card-list\",\n          children: movies.map(movie => {\n            let rating;\n            // eslint-disable-next-line array-callback-return\n            ratingList.map(item => {\n              if (item.id === movie.id) {\n                rating = item.value;\n              }\n            });\n            return /*#__PURE__*/_jsxDEV(CardItem, {\n              movie: movie,\n              genresList: genres,\n              postRating: postRating,\n              deleteRating: deleteRating,\n              guestId: guestId,\n              addRatedMovie: addRatedMovie,\n              removeRatedMovie: removeRatedMovie,\n              rating: rating\n            }, movie.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PaginationUI, {\n          current: current,\n          onChange: onChange,\n          totalItems: totalItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Error, {\n    message: message,\n    type: \"info\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 5\n  }, this);\n};\n_c = CardListView;\nvar _c;\n$RefreshReg$(_c, \"CardListView\");","map":{"version":3,"names":["React","debounce","API","Spinner","Error","PaginationUI","APIConsumer","CardItem","jsxDEV","_jsxDEV","Fragment","_Fragment","CardList","Component","constructor","args","state","movies","isLoading","isError","message","currentPage","currentPageRated","totalItems","tab","ratingList","api","onMoviesLoad","setState","onError","getMovies","query","length","getMoviesOnQuery","then","res","results","catch","getMoviesWithRating","guestId","debounceGetMovies","paginationOnChange","page","addRatedMovie","id","value","newRatedMovie","removeRatedMovie","newRatingList","filter","item","componentDidMount","sessionStorage","getItem","JSON","parse","componentDidUpdate","prevProps","prevState","props","window","scrollTo","setItem","stringify","render","errorView","type","fileName","_jsxFileName","lineNumber","columnNumber","spinner","fontSize","cardList","CardListView","current","onChange","children","genres","postRating","deleteRating","className","map","movie","rating","genresList","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/my-react — копияяяяя/src/Components/CardList/CardList.jsx"],"sourcesContent":["import React from 'react'\r\nimport debounce from 'lodash.debounce'\r\n\r\nimport API from '../../API/API'\r\nimport Spinner from '../UI/Spinner/Spinner'\r\nimport Error from '../UI/Error/Error'\r\nimport PaginationUI from '../UI/Pagination/PaginationUI'\r\nimport { APIConsumer } from '../../API-Context/API-Context'\r\n\r\nimport CardItem from './CardItem/CardItem'\r\n\r\nimport './CardList.scss'\r\n\r\nexport default class CardList extends React.Component {\r\n  state = {\r\n    movies: [],\r\n    isLoading: false,\r\n    isError: false,\r\n    message: 'Type to search...',\r\n    currentPage: 1,\r\n    currentPageRated: 1,\r\n    totalItems: 0,\r\n    tab: 'Search',\r\n    ratingList: [],\r\n  }\r\n\r\n  api = new API()\r\n\r\n  onMoviesLoad = (movies) => {\r\n    this.setState({\r\n      movies,\r\n      isLoading: false,\r\n      isError: false,\r\n    })\r\n  }\r\n\r\n  onError = () => {\r\n    this.setState({\r\n      isError: true,\r\n      isLoading: false,\r\n    })\r\n  }\r\n\r\n  getMovies = (query = '', currentPage) => {\r\n    if (query.length === 0) {\r\n      this.setState({\r\n        message: 'Type to search...',\r\n      })\r\n    }\r\n    this.api\r\n      .getMoviesOnQuery(query, currentPage)\r\n      .then((res) => {\r\n        this.onMoviesLoad(res.results)\r\n        this.setState({\r\n          totalItems: res.totalItems,\r\n        })\r\n      })\r\n      .catch(this.onError)\r\n  }\r\n\r\n  getMoviesWithRating = (guestId, currentPage) => {\r\n    this.api\r\n      .getMoviesWithRating(guestId, currentPage)\r\n      .then((res) => {\r\n        this.onMoviesLoad(res.results)\r\n        this.setState({\r\n          totalItems: res.totalItems,\r\n        })\r\n      })\r\n      .catch(this.onError)\r\n  }\r\n\r\n  debounceGetMovies = debounce((query, currentPage) => {\r\n    this.setState({\r\n      isLoading: true,\r\n      message: 'We are very sorry, but we have not found anything...',\r\n    })\r\n    this.getMovies(query, currentPage)\r\n  }, 1500)\r\n\r\n  paginationOnChange = (page) => {\r\n    if (this.state.tab === 'Search') {\r\n      this.setState({\r\n        currentPage: page,\r\n      })\r\n    } else {\r\n      this.setState({\r\n        currentPageRated: page,\r\n      })\r\n    }\r\n  }\r\n\r\n  addRatedMovie = (id, value) => {\r\n    const newRatedMovie = { id, value }\r\n    this.setState(({ ratingList }) => {\r\n      return {\r\n        ratingList: [...ratingList, newRatedMovie],\r\n      }\r\n    })\r\n  }\r\n\r\n  removeRatedMovie = (id) => {\r\n    this.setState(({ ratingList }) => {\r\n      const newRatingList = ratingList.filter((item) => item.id !== id)\r\n      return {\r\n        ratingList: newRatingList,\r\n      }\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (sessionStorage.getItem('ratingList')) {\r\n      this.setState({\r\n        ratingList: JSON.parse(sessionStorage.getItem('ratingList')),\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.query !== this.props.query) {\r\n      this.debounceGetMovies(this.props.query, this.state.currentPage)\r\n    }\r\n\r\n    if (prevState.currentPage !== this.state.currentPage) {\r\n      this.getMovies(this.props.query, this.state.currentPage)\r\n      window.scrollTo(0, 0)\r\n    }\r\n\r\n    if (prevState.currentPageRated !== this.state.currentPageRated) {\r\n      this.getMoviesWithRating(this.props.guestId, this.state.currentPageRated)\r\n      window.scrollTo(0, 0)\r\n    }\r\n\r\n    if (prevProps.tab !== this.props.tab && this.props.tab === 'Rated') {\r\n      this.setState({\r\n        tab: this.props.tab,\r\n        message: 'We are very sorry, but we have not found anything...',\r\n      })\r\n      this.getMoviesWithRating(this.props.guestId, this.state.currentPageRated)\r\n    }\r\n\r\n    if (prevProps.tab !== this.props.tab && this.props.tab === 'Search') {\r\n      this.setState({\r\n        tab: this.props.tab,\r\n        message: 'Type to search...',\r\n      })\r\n      this.getMovies(this.props.query, this.state.currentPage)\r\n    }\r\n\r\n    if (prevState.ratingList !== this.state.ratingList) {\r\n      sessionStorage.setItem('ratingList', JSON.stringify(this.state.ratingList))\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, isError, message, movies, currentPage, currentPageRated, ratingList } = this.state\r\n    const errorView = isError ? <Error message=\"Oops. Something went wrong. Try again.\" type=\"error\" /> : null\r\n    const spinner = isLoading && !isError ? <Spinner fontSize={60} /> : null\r\n    const page = this.state.tab === 'Search' ? currentPage : currentPageRated\r\n    const cardList = !(isLoading || isError) ? (\r\n      <CardListView\r\n        movies={movies}\r\n        message={message}\r\n        current={page}\r\n        onChange={this.paginationOnChange}\r\n        totalItems={this.state.totalItems}\r\n        guestId={this.props.guestId}\r\n        addRatedMovie={this.addRatedMovie}\r\n        removeRatedMovie={this.removeRatedMovie}\r\n        ratingList={ratingList}\r\n      />\r\n    ) : null\r\n    return (\r\n      <>\r\n        {errorView}\r\n        {spinner}\r\n        {cardList}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst CardListView = ({\r\n  movies,\r\n  message,\r\n  current,\r\n  onChange,\r\n  totalItems,\r\n  guestId,\r\n  addRatedMovie,\r\n  removeRatedMovie,\r\n  ratingList,\r\n}) => {\r\n  return movies.length > 0 ? (\r\n    <APIConsumer>\r\n      {({ genres, postRating, deleteRating }) => {\r\n        return (\r\n          <>\r\n            <ul className=\"card-list\">\r\n              {movies.map((movie) => {\r\n                let rating\r\n                // eslint-disable-next-line array-callback-return\r\n                ratingList.map((item) => {\r\n                  if (item.id === movie.id) {\r\n                    rating = item.value\r\n                  }\r\n                })\r\n                return (\r\n                  <CardItem\r\n                    key={movie.id}\r\n                    movie={movie}\r\n                    genresList={genres}\r\n                    postRating={postRating}\r\n                    deleteRating={deleteRating}\r\n                    guestId={guestId}\r\n                    addRatedMovie={addRatedMovie}\r\n                    removeRatedMovie={removeRatedMovie}\r\n                    rating={rating}\r\n                  />\r\n                )\r\n              })}\r\n            </ul>\r\n            <PaginationUI current={current} onChange={onChange} totalItems={totalItems} />\r\n          </>\r\n        )\r\n      }}\r\n    </APIConsumer>\r\n  ) : (\r\n    <Error message={message} type=\"info\" />\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}