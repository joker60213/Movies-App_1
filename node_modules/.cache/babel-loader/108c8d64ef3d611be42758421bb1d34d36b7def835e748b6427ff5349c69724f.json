{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\my-react \\u2014 \\u043A\\u043E\\u043F\\u0438\\u044F\\u044F\\u044F\\u044F\\u044F\\\\src\\\\Components\\\\CardList\\\\CardItem\\\\CardItem.jsx\";\nimport React from 'react';\nimport { format } from 'date-fns';\nimport { Rate } from 'antd';\nimport './CardItem.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardItem = ({\n  movie,\n  genresList,\n  postRating,\n  deleteRating,\n  guestId,\n  addRatedMovie,\n  removeRatedMovie,\n  rating\n}) => {\n  const TRIM_LENGTH = 200;\n  const getTrimText = (text, length) => {\n    if (text.length > length) {\n      return text.slice(0, text.indexOf(' ', length)) + '...';\n    }\n    return text;\n  };\n  const rateOnChange = value => {\n    if (value === 0) {\n      deleteRating(guestId, movie.id);\n      removeRatedMovie(movie.id);\n    } else {\n      postRating(guestId, movie.id, value);\n      addRatedMovie(movie.id, value);\n    }\n  };\n  const genres = genresList.filter(item => movie.genre_ids.includes(item.id));\n  const voteAverage = movie.vote_average.toFixed(1);\n  let ratingClass;\n  if (voteAverage < 3) {\n    ratingClass = 'rating__low';\n  } else if (voteAverage < 5) {\n    ratingClass = 'rating__middle';\n  } else if (voteAverage < 7) {\n    ratingClass = 'rating__high';\n  } else {\n    ratingClass = 'rating__highest';\n  }\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"card-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"card-item__image\",\n      src: movie.poster_path ? `https://image.tmdb.org/t/p/w500${movie.poster_path}` : 'https://artworks.thetvdb.com/banners/movies/292873/posters/AvgrHw6YEehlNxVZNVDoVz2Huht.jpg',\n      alt: \"poster\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-item__wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-item__header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"card-item__title\",\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `rating ${ratingClass}`,\n          children: voteAverage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"card-item__date\",\n        children: movie.release_date ? format(`${movie.release_date}`, 'MMMM dd, yyyy') : 'Release date is unknown...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"card-item__genre-list\",\n        children: genres.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"card-item__genre-item\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-item__description\",\n        children: movie.overview ? getTrimText(movie.overview, TRIM_LENGTH) : 'No description...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Rate, {\n        className: \"rate\",\n        count: 10,\n        allowHalf: true,\n        onChange: rateOnChange,\n        defaultValue: rating ? rating : 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_c = CardItem;\nexport default CardItem;\nvar _c;\n$RefreshReg$(_c, \"CardItem\");","map":{"version":3,"names":["React","format","Rate","jsxDEV","_jsxDEV","CardItem","movie","genresList","postRating","deleteRating","guestId","addRatedMovie","removeRatedMovie","rating","TRIM_LENGTH","getTrimText","text","length","slice","indexOf","rateOnChange","value","id","genres","filter","item","genre_ids","includes","voteAverage","vote_average","toFixed","ratingClass","className","children","src","poster_path","alt","fileName","_jsxFileName","lineNumber","columnNumber","title","release_date","map","name","overview","count","allowHalf","onChange","defaultValue","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/my-react — копияяяяя/src/Components/CardList/CardItem/CardItem.jsx"],"sourcesContent":["import React from 'react'\r\nimport { format } from 'date-fns'\r\nimport { Rate } from 'antd'\r\n\r\nimport './CardItem.scss'\r\n\r\nconst CardItem = ({\r\n  movie,\r\n  genresList,\r\n  postRating,\r\n  deleteRating,\r\n  guestId,\r\n  addRatedMovie,\r\n  removeRatedMovie,\r\n  rating,\r\n}) => {\r\n  const TRIM_LENGTH = 200\r\n\r\n  const getTrimText = (text, length) => {\r\n    if (text.length > length) {\r\n      return text.slice(0, text.indexOf(' ', length)) + '...'\r\n    }\r\n    return text\r\n  }\r\n\r\n  const rateOnChange = (value) => {\r\n    if (value === 0) {\r\n      deleteRating(guestId, movie.id)\r\n      removeRatedMovie(movie.id)\r\n    } else {\r\n      postRating(guestId, movie.id, value)\r\n      addRatedMovie(movie.id, value)\r\n    }\r\n  }\r\n\r\n  const genres = genresList.filter((item) => movie.genre_ids.includes(item.id))\r\n\r\n  const voteAverage = movie.vote_average.toFixed(1)\r\n\r\n  let ratingClass\r\n\r\n  if (voteAverage < 3) {\r\n    ratingClass = 'rating__low'\r\n  } else if (voteAverage < 5) {\r\n    ratingClass = 'rating__middle'\r\n  } else if (voteAverage < 7) {\r\n    ratingClass = 'rating__high'\r\n  } else {\r\n    ratingClass = 'rating__highest'\r\n  }\r\n\r\n  return (\r\n    <li className=\"card-item\">\r\n      <img\r\n        className=\"card-item__image\"\r\n        src={\r\n          movie.poster_path\r\n            ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\r\n            : 'https://artworks.thetvdb.com/banners/movies/292873/posters/AvgrHw6YEehlNxVZNVDoVz2Huht.jpg'\r\n        }\r\n        alt=\"poster\"\r\n      />\r\n      <div className=\"card-item__wrapper\">\r\n        <div className=\"card-item__header\">\r\n          <h2 className=\"card-item__title\">{movie.title}</h2>\r\n          <span className={`rating ${ratingClass}`}>{voteAverage}</span>\r\n        </div>\r\n        <span className=\"card-item__date\">\r\n          {movie.release_date ? format(`${movie.release_date}`, 'MMMM dd, yyyy') : 'Release date is unknown...'}\r\n        </span>\r\n        <ul className=\"card-item__genre-list\">\r\n          {genres.map((item) => {\r\n            return (\r\n              <li className=\"card-item__genre-item\" key={item.id}>\r\n                <span>{item.name}</span>\r\n              </li>\r\n            )\r\n          })}\r\n        </ul>\r\n        <p className=\"card-item__description\">\r\n          {movie.overview ? getTrimText(movie.overview, TRIM_LENGTH) : 'No description...'}\r\n        </p>\r\n        <Rate className=\"rate\" count={10} allowHalf onChange={rateOnChange} defaultValue={rating ? rating : 0} />\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default CardItem\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}