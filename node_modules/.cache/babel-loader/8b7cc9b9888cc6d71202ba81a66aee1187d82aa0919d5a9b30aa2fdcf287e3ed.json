{"ast":null,"code":"export default class API {\n  constructor() {\n    this._apiToken = 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2NDAwMjU3MWY4ZWQzOTkzMWJkN2ZmNzA2NjQ2YmNhNCIsInN1YiI6IjY1ODk5OWZmMDcyMTY2NjdlNGE1ZTFjZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Fow_XT2lKTxtiCeT-55ML2Yio61BWS_mEW0LwDo4_gs';\n    this._apiKey = '64002571f8ed39931bd7ff706646bca4';\n    this._mainUrl = 'https://api.themoviedb.org/3/';\n    this._headers = {\n      accept: 'application/json',\n      Authorization: `${this._apiToken}`\n    };\n    this.getResponse = async url => {\n      const response = await fetch(`${this._mainUrl}${url}`, {\n        method: 'GET',\n        headers: this._headers\n      });\n      if (response.ok) {\n        return await response.json();\n      }\n      throw new Error(`Could not fetch data to ${this._mainUrl}${url}`);\n    };\n    this.postRating = async (guestId, movieId, value) => {\n      const options = {\n        method: 'POST',\n        headers: {\n          accept: 'application/json',\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: `{\"value\": ${value}}`\n      };\n      const response = await fetch(`${this._mainUrl}movie/${movieId}/rating?api_key=${this._apiKey}&guest_session_id=${guestId}`, options);\n      if (response.ok) {\n        return await response.json();\n      }\n      throw new Error('Could not post data rating');\n    };\n    this.deleteRating = async (guestId, movieId) => {\n      const options = {\n        method: 'DELETE',\n        headers: {\n          accept: 'application/json',\n          'Content-Type': 'application/json;charset=utf-8'\n        }\n      };\n      const response = await fetch(`${this._mainUrl}movie/${movieId}/rating?api_key=${this._apiKey}&guest_session_id=${guestId}`, options);\n      if (response.ok) {\n        return await response.json();\n      }\n      throw new Error('Could not post data rating');\n    };\n    this.getMoviesWithRating = async (guestId, page = 1, language = 'en-US') => {\n      const options = {\n        method: 'GET',\n        headers: {\n          accept: 'application/json'\n        }\n      };\n      const response = await fetch(`${this._mainUrl}guest_session/${guestId}/rated/movies?api_key=${this._apiKey}&language=${language}&page=${page}&sort_by=created_at.asc`, options);\n      if (response.ok) {\n        return await response.json().then(res => {\n          return {\n            results: res.results,\n            totalItems: res.total_results\n          };\n        });\n      }\n      throw new Error(`Could not fetch data to ${this._mainUrl}`);\n    };\n  }\n  getMoviesOnQuery(query, page = 1, adult = false, language = 'en-US') {\n    return this.getResponse(`search/movie?query=${query}&include_adult=${adult}&language=${language}&page=${page}`).then(res => {\n      return {\n        results: res.results,\n        totalItems: res.total_results\n      };\n    });\n  }\n  getGenresList(language = 'en') {\n    return this.getResponse(`genre/movie/list?language=${language}`).then(res => res.genres);\n  }\n  createGuestSession() {\n    return this.getResponse('authentication/guest_session/new').then(res => res.guest_session_id);\n  }\n}","map":{"version":3,"names":["API","constructor","_apiToken","_apiKey","_mainUrl","_headers","accept","Authorization","getResponse","url","response","fetch","method","headers","ok","json","Error","postRating","guestId","movieId","value","options","body","deleteRating","getMoviesWithRating","page","language","then","res","results","totalItems","total_results","getMoviesOnQuery","query","adult","getGenresList","genres","createGuestSession","guest_session_id"],"sources":["C:/Users/User/Desktop/my-react — копияяяяя/src/API/API.js"],"sourcesContent":["export default class API {\r\n    _apiToken =\r\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2NDAwMjU3MWY4ZWQzOTkzMWJkN2ZmNzA2NjQ2YmNhNCIsInN1YiI6IjY1ODk5OWZmMDcyMTY2NjdlNGE1ZTFjZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Fow_XT2lKTxtiCeT-55ML2Yio61BWS_mEW0LwDo4_gs'\r\n  \r\n    _apiKey = '64002571f8ed39931bd7ff706646bca4'\r\n  \r\n    _mainUrl = 'https://api.themoviedb.org/3/'\r\n  \r\n    _headers = {\r\n      accept: 'application/json',\r\n      Authorization: `${this._apiToken}`,\r\n    }\r\n  \r\n    getResponse = async (url) => {\r\n      const response = await fetch(`${this._mainUrl}${url}`, {\r\n        method: 'GET',\r\n        headers: this._headers,\r\n      })\r\n  \r\n      if (response.ok) {\r\n        return await response.json()\r\n      }\r\n  \r\n      throw new Error(`Could not fetch data to ${this._mainUrl}${url}`)\r\n    }\r\n  \r\n    postRating = async (guestId, movieId, value) => {\r\n      const options = {\r\n        method: 'POST',\r\n        headers: {\r\n          accept: 'application/json',\r\n          'Content-Type': 'application/json;charset=utf-8',\r\n        },\r\n        body: `{\"value\": ${value}}`,\r\n      }\r\n  \r\n      const response = await fetch(\r\n        `${this._mainUrl}movie/${movieId}/rating?api_key=${this._apiKey}&guest_session_id=${guestId}`,\r\n        options\r\n      )\r\n  \r\n      if (response.ok) {\r\n        return await response.json()\r\n      }\r\n  \r\n      throw new Error('Could not post data rating')\r\n    }\r\n  \r\n    deleteRating = async (guestId, movieId) => {\r\n      const options = {\r\n        method: 'DELETE',\r\n        headers: {\r\n          accept: 'application/json',\r\n          'Content-Type': 'application/json;charset=utf-8',\r\n        },\r\n      }\r\n  \r\n      const response = await fetch(\r\n        `${this._mainUrl}movie/${movieId}/rating?api_key=${this._apiKey}&guest_session_id=${guestId}`,\r\n        options\r\n      )\r\n  \r\n      if (response.ok) {\r\n        return await response.json()\r\n      }\r\n  \r\n      throw new Error('Could not post data rating')\r\n    }\r\n  \r\n    getMoviesOnQuery(query, page = 1, adult = false, language = 'en-US') {\r\n      return this.getResponse(\r\n        `search/movie?query=${query}&include_adult=${adult}&language=${language}&page=${page}`\r\n      ).then((res) => {\r\n        return {\r\n          results: res.results,\r\n          totalItems: res.total_results,\r\n        }\r\n      })\r\n    }\r\n  \r\n    getGenresList(language = 'en') {\r\n      return this.getResponse(`genre/movie/list?language=${language}`).then((res) => res.genres)\r\n    }\r\n  \r\n    createGuestSession() {\r\n      return this.getResponse('authentication/guest_session/new').then((res) => res.guest_session_id)\r\n    }\r\n  \r\n    getMoviesWithRating = async (guestId, page = 1, language = 'en-US') => {\r\n      const options = {\r\n        method: 'GET',\r\n        headers: {\r\n          accept: 'application/json',\r\n        },\r\n      }\r\n  \r\n      const response = await fetch(\r\n        `${this._mainUrl}guest_session/${guestId}/rated/movies?api_key=${this._apiKey}&language=${language}&page=${page}&sort_by=created_at.asc`,\r\n        options\r\n      )\r\n  \r\n      if (response.ok) {\r\n        return await response.json().then((res) => {\r\n          return {\r\n            results: res.results,\r\n            totalItems: res.total_results,\r\n          }\r\n        })\r\n      }\r\n  \r\n      throw new Error(`Could not fetch data to ${this._mainUrl}`)\r\n    }\r\n  }\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}